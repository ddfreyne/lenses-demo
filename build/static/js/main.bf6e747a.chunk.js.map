{"version":3,"sources":["lenses.ts","fields/Wrapper.tsx","fields/TextField.tsx","fields/DropdownField.tsx","fields/ListField.tsx","fields/RadioButtonField.tsx","PersonForm.tsx","index.tsx"],"names":["compose","ts","sf","get","t","set","f","forProp","prop","makeArray","lens","len","Array","fill","map","_","i","indexes","Object","assign","forIndex","l","over","fn","removeAt","idx","fs","es","slice","Wrapper","label","children","style","display","marginBottom","fontWeight","BareTextField","props","value","top","type","onChange","e","newValue","target","setTop","TextField","BareDropdownField","id","event","values","find","v","key","renderValue","DropdownField","BareListField","make","length","lenses","elementLens","onClick","ListField","BareRadioButtonField","choiceValue","className","checked","RadioButtonField","firstName","lastName","address","hobbies","favoriteColor","street","houseNumber","allColors","hex","name","newPerson","number","PersonForm","useState","person","color","o","hobby","marginTop","padding","background","JSON","stringify","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.bf6e747a.chunk.js","sourcesContent":["// T: top-level object\n// F: focused property of top-level object\nexport interface Lens<T, F> {\n  get: (t: T) => F;\n  set: (t: T, f: F) => T;\n}\n\n// -----------------------------------------------------------------------------\n// private utility functions\n\nconst indexes = (len: number): number[] =>\n  Array(len)\n    .fill(null)\n    .map((_, i) => i);\n\nconst removeAtBasic = <E extends any>(es: E[], i: number) => [\n  ...es.slice(0, i),\n  ...es.slice(i + 1)\n];\n\n// -----------------------------------------------------------------------------\n// lens helper functions\n\nexport const compose = <T, S, F>(\n  ts: Lens<T, S>,\n  sf: Lens<S, F>\n): Lens<T, F> => ({\n  get: (t) => sf.get(ts.get(t)),\n  set: (t, f) => ts.set(t, sf.set(ts.get(t), f))\n});\n\n// NOTE: Why the double function invocation?\n//\n// When creating a lens using `forProp`, we need to specify the top type\n// (`Person`, in this case). If `forProp` only had a single function\n// invocation, we’d have to specify both the top type as well as the focus\n// type (`string` in this case) -- TypeScript doesn’t (yet) support partial\n// type inference, but we can work around it by having two function\n// invocations.\n//\n// See TypeScript issue #26242 for details:\n// https://github.com/microsoft/TypeScript/issues/26242).\nexport const forProp = <T extends object>() => <P extends keyof T>(\n  prop: P\n): Lens<T, T[P]> => ({\n  get: (t) => t[prop],\n  set: (t, f) => ({ ...t, [prop]: f })\n});\n\nexport const forIndex = <T extends any>(i: number): Lens<T[], T> => ({\n  get: (t) => t[i],\n  set: (t, f) => Object.assign([], t, { [i]: f })\n});\n\nexport const makeArray = <T extends any, F>(lens: Lens<T, F[]>, len: number) =>\n  indexes(len)\n    .map((i) => forIndex<F>(i))\n    .map((l) => compose(lens, l));\n\nexport const over = <T, F>(t: T, l: Lens<T, F>, fn: (f: F) => F): T =>\n  l.set(t, fn(l.get(t)));\n\nexport const push = <T, F>(t: T, l: Lens<T, F[]>, f: F): T =>\n  over(t, l, (fs) => [...fs, f]);\n\nexport const removeAt = <T, F>(t: T, l: Lens<T, F[]>, idx: number): T =>\n  over(t, l, (fs) => removeAtBasic(fs, idx));\n","import React from \"react\";\n\ninterface WrapperProps {\n  label: string;\n  children: JSX.Element;\n}\n\nexport const Wrapper = ({ label, children }: WrapperProps) => (\n  <label style={{ display: \"block\", marginBottom: 20 }}>\n    <div style={{ fontWeight: \"bold\" }}>{label}</div>\n    {children}\n  </label>\n);\n","import React from \"react\";\n\nimport { Lens } from \"../lenses\";\nimport { Wrapper } from \"./Wrapper\";\n\ninterface BareTextFieldProps<T> {\n  lens: Lens<T, string>;\n  top: T;\n  setTop: (t: T) => void;\n}\n\nexport const BareTextField = <T extends any>(props: BareTextFieldProps<T>) => {\n  let value = props.lens.get(props.top);\n\n  let set = (newValue: string) => {\n    props.setTop(props.lens.set(props.top, newValue));\n  };\n\n  return (\n    <input type=\"text\" value={value} onChange={(e) => set(e.target.value)} />\n  );\n};\n\ninterface TextFieldProps<T> extends BareTextFieldProps<T> {\n  label: string;\n}\n\nexport const TextField = <T extends any>(props: TextFieldProps<T>) => (\n  <Wrapper label={props.label}>\n    <BareTextField {...props} />\n  </Wrapper>\n);\n","import React from \"react\";\n\nimport { Lens } from \"../lenses\";\nimport { Wrapper } from \"./Wrapper\";\n\ninterface BareDropdownFieldProps<T, F> {\n  lens: Lens<T, F | null>;\n\n  top: T;\n  setTop: (t: T) => void;\n\n  values: Array<F>;\n  renderValue: (f: F) => string;\n}\n\nconst BareDropdownField = <T, F extends { id: string }>(\n  props: BareDropdownFieldProps<T, F>\n) => {\n  let value: F | null = props.lens.get(props.top);\n\n  const onChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    let id = event.target.value;\n    let value = props.values.find((v) => v.id === id) || null;\n    props.setTop(props.lens.set(props.top, value));\n  };\n\n  return (\n    <select value={value?.id} onChange={onChange}>\n      <option value=\"\"></option>\n      {props.values.map((value) => (\n        <option value={value.id} key={value.id}>\n          {props.renderValue(value)}\n        </option>\n      ))}\n    </select>\n  );\n};\n\ninterface DropdownFieldProps<T, F> extends BareDropdownFieldProps<T, F> {\n  label: string;\n}\n\nexport const DropdownField = <T extends any, F extends { id: string }>(\n  props: DropdownFieldProps<T, F>\n) => (\n  <Wrapper label={props.label}>\n    <BareDropdownField {...props} />\n  </Wrapper>\n);\n","import React from \"react\";\n\nimport { Lens, makeArray, push, removeAt } from \"../lenses\";\nimport { Wrapper } from \"./Wrapper\";\n\ninterface BareListFieldProps<T, F> {\n  lens: Lens<T, F[]>;\n  top: T;\n  setTop: (t: T) => void;\n  make: () => F;\n  children: (lens: Lens<T, F>) => JSX.Element;\n}\n\nconst BareListField = <T, F>(props: BareListFieldProps<T, F>) => {\n  let { lens, top, setTop, make, children } = props;\n\n  let length = lens.get(top).length;\n  let lenses = makeArray(lens, length);\n\n  return (\n    <div>\n      {lenses.map((elementLens, idx) => (\n        <div>\n          {children(elementLens)}\n\n          <button onClick={() => setTop(removeAt(top, lens, idx))}>-</button>\n        </div>\n      ))}\n\n      <button onClick={() => setTop(push(top, lens, make()))}>+</button>\n    </div>\n  );\n};\n\ninterface ListFieldProps<T, F> extends BareListFieldProps<T, F> {\n  label: string;\n}\n\nexport const ListField = <T, F>(props: ListFieldProps<T, F>) => (\n  <Wrapper label={props.label}>\n    <BareListField {...props} />\n  </Wrapper>\n);\n","import * as React from \"react\";\n\nimport { Lens } from \"../lenses\";\nimport { Wrapper } from \"./Wrapper\";\n\ninterface BareRadioButtonFieldProps<T, F> {\n  lens: Lens<T, F | null>;\n\n  top: T;\n  setTop: (t: T) => void;\n\n  values: Array<F>;\n  renderValue: (f: F) => string | JSX.Element;\n}\n\nconst BareRadioButtonField = <T, F extends { id: string }>(\n  props: BareRadioButtonFieldProps<T, F>\n) => {\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    let id = event.target.value;\n    let value = props.values?.find((v) => v.id === id) || null;\n    props.setTop(props.lens.set(props.top, value));\n  };\n\n  let value = props.lens.get(props.top);\n\n  return (\n    <>\n      {props.values.map((choiceValue, idx) => (\n        <div key={idx} className={idx === 0 ? \"\" : \"pt-2\"}>\n          <label>\n            <input\n              type=\"radio\"\n              value={choiceValue.id}\n              onChange={onChange}\n              checked={value?.id === choiceValue.id}\n            />\n            <span className=\"pl-2\">{props.renderValue(choiceValue)}</span>\n          </label>\n        </div>\n      ))}\n    </>\n  );\n};\n\ninterface RadioButtonFieldProps<T, F> extends BareRadioButtonFieldProps<T, F> {\n  label: string;\n}\n\nexport const RadioButtonField = <T extends any, F extends { id: string }>(\n  props: RadioButtonFieldProps<T, F>\n) => (\n  <Wrapper label={props.label}>\n    <BareRadioButtonField {...props} />\n  </Wrapper>\n);\n","import React, { useState } from \"react\";\n\nimport { forProp, compose } from \"./lenses\";\nimport { Person, Address } from \"./Person\";\nimport { BareTextField, TextField } from \"./fields/TextField\";\nimport { DropdownField } from \"./fields/DropdownField\";\nimport { ListField } from \"./fields/ListField\";\nimport { RadioButtonField } from \"./fields/RadioButtonField\";\n\nlet firstName = forProp<Person>()(\"firstName\");\nlet lastName = forProp<Person>()(\"lastName\");\nlet address = forProp<Person>()(\"address\");\nlet hobbies = forProp<Person>()(\"hobbies\");\nlet favoriteColor = forProp<Person>()(\"favoriteColor\");\n\nlet street = compose(address, forProp<Address>()(\"street\"));\nlet houseNumber = compose(address, forProp<Address>()(\"number\"));\n\nconst allColors = [\n  { id: \"mari\", hex: \"#0089a8\", name: \"Marina\" },\n  { id: \"star\", hex: \"#e74132\", name: \"Stardust\" },\n  { id: \"ruby\", hex: \"#bc1a50\", name: \"Ruby\" },\n  { id: \"sapp\", hex: \"#45439d\", name: \"Sapphire\" },\n  { id: \"elec\", hex: \"#c2d62e\", name: \"Electric\" },\n  { id: \"mint\", hex: \"#29bc75\", name: \"Mint\" },\n  { id: \"slat\", hex: \"#546173\", name: \"Slate\" }\n];\n\nconst newPerson = (): Person => ({\n  firstName: \"\",\n  lastName: \"\",\n  address: {\n    street: \"\",\n    number: \"\"\n  },\n  hobbies: [],\n  favoriteColor: null\n});\n\nexport const PersonForm = () => {\n  let [person, setPerson] = useState(newPerson);\n  let f = { top: person, setTop: setPerson };\n\n  return (\n    <>\n      <h1 style={{ color: person.favoriteColor?.hex || \"#000\" }}>\n        Hello, {person.firstName || \"stranger\"}!\n      </h1>\n\n      <TextField {...f} lens={firstName} label=\"First name\" />\n      <TextField {...f} lens={lastName} label=\"Last name\" />\n      <TextField {...f} lens={street} label=\"Street\" />\n      <TextField {...f} lens={houseNumber} label=\"Number\" />\n\n      <DropdownField\n        {...f}\n        lens={favoriteColor}\n        label=\"Favorite color\"\n        values={allColors}\n        renderValue={(o) => `${o.name} (${o.hex})`}\n      />\n\n      <RadioButtonField\n        {...f}\n        lens={favoriteColor}\n        label=\"Favorite color\"\n        values={allColors}\n        renderValue={(o) => <span style={{ color: o.hex }}>{o.name}</span>}\n      />\n\n      <ListField {...f} lens={hobbies} label=\"Hobbies\" make={() => \"\"}>\n        {(hobby) => <BareTextField {...f} lens={hobby} />}\n      </ListField>\n\n      <pre style={{ marginTop: 20, padding: 10, background: \"#eee\" }}>\n        {JSON.stringify(person, null, 2)}\n      </pre>\n    </>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { PersonForm } from \"./PersonForm\";\n\nimport \"./styles.css\";\n\nconst rootElement = document.getElementById(\"root\");\n\nReactDOM.render(\n  <div className=\"root\">\n    <React.StrictMode>\n      <PersonForm />\n    </React.StrictMode>\n  </div>,\n  rootElement\n);\n"],"sourceRoot":""}